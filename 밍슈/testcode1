import pandas as pd
import numpy as np
# import pip
# pip.main(['install', 'Analyzer'])
import pandas_datareader as pdr
import stats
import matplotlib.pyplot as plt
# from Investar import Analyzer
#
# mk = Analyzer.MarketDB()
# df = mk.get_daily_price('삼성전자', '1998-04-27', '2018-04-27')
# """
# >>> df
#               code        date     open  ...  volume       MA20      MA200
# date                                     ...
# 1998-04-27  005930  1998-04-27    66800  ...  187010        NaN        NaN
# 1998-04-28  005930  1998-04-28    65000  ...  174220        NaN        NaN
# 1998-04-29  005930  1998-04-29    66900  ...  238910        NaN        NaN
# 1998-04-30  005930  1998-04-30    70500  ...  616240        NaN        NaN
# 1998-05-02  005930  1998-05-02    72000  ...  236600        NaN        NaN
# ...            ...         ...      ...  ...     ...        ...        ...
# 2018-04-23  005930  2018-04-23  2550000  ...  232380  2478450.0  2513175.0
# 2018-04-24  005930  2018-04-24  2592000  ...  315406  2479650.0  2513805.0
# 2018-04-25  005930  2018-04-25  2461000  ...  332292  2483900.0  2514520.0
# 2018-04-26  005930  2018-04-26  2521000  ...  360931  2491650.0  2515750.0
# 2018-04-27  005930  2018-04-27  2669000  ...  606216  2501100.0  2517250.0
# [4967 rows x 10 columns]
# """
# df['MA20'] = df['close'].rolling(window=20).mean()
# df['MA200'] = df['close'].rolling(window=200).mean()
#
# plt.figure(figsize=(9, 7))
# plt.plot(df.index, df['close'], color='cyan', label='Close')
# plt.plot(df.index, df['MA20'], 'm--', label='MA20')
# plt.plot(df.index, df['MA200'], 'r--', label='MA200')
# plt.legend(loc='best')
# plt.title('Samsung Electronics')
# plt.grid(color='gray', linestyle='--')
# plt.yticks([65300, 500000, 1000000, 1500000, 2000000, 2500000, 2650000])
# plt.xticks(['1998-04-27', '2002-04-27', '2006-04-27', '2010-04-27', '2014-04-27', '2018-04-27'])
# plt.show()

# ---------------------------------------------------------------------------

# plt.suptitle('Image Processing', fontsize=18)
# plt.subplot(1, 2, 1) # 1행 2열의 영역에서 첫 번째 영역으로 지정
# plt.title('Original Image')
# plt.imshow(mpimg.imread('src.png') # 원본 파일을 읽어서 이미지로 표시
# plt.imshow(mpimg.imread('src.png')) # 원본 파일을 읽어서 이미지로 표시
#
# plt.subplot(122) # 1행 2열의 영역에서 두 번째 영역으로 지정
# plt.title('Pseudocolor Image')

# ---------------------------------------------------------------------------

dow = pdr.get_data_yahoo('^DJI', '2000-01-04')
kospi = pdr.get_data_yahoo('^KS11', '2000-01-04')

df = pd.DataFrame({'DOW': dow['Close'], 'KOSPI': kospi['Close']})
df = pd.DataFrame({'DOW': dow['Close'], 'KOSPI': kospi['Close']})
df = df.fillna(method='bfill')
df = df.fillna(method='ffill')

# ---------------------------------------------------------------------------

dow = pdr.get_data_yahoo('^DJI', '2000-01-04')
kospi = pdr.get_data_yahoo('^KS11', '2000-01-04')

df = pd.DataFrame({'X': dow['Close'], 'Y': kospi['Close']})
df = pd.DataFrame({'X': dow['Close'], 'Y': kospi['Close']})
df = df.fillna(method='bfill')
df = df.fillna(method='ffill')

regr = stats.linr(df.X, df.Y)
# slope 지원X
regr_line = f'Y = {regr.slope:2f}  X + {regr.intercept:2f}'
regr_line = f'Y = {regr.slope:2f}  X + {regr.intercept:2f}'

plt.figure(figsize=(7, 7))
plt.plot(df.X, df.Y, '.')
plt.plot(df.X, regr.slope,
df.X + regr.intercept, 'r')
plt.plot(df.X, regr.slope * df.X + regr.intercept, 'r')
plt.legend(['DOW x KOSPI', regr_line])
plt.title(f'DOW x KOSPI (R = {regr.rvalue:2f})')
plt.title(f'DOW x KOSPI (R = {regr.rvalue:2f})')
plt.xlabel('Dow Jones Industrial Average')
plt.ylabel('KOSPI')
plt.show()
